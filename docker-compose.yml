# docker-compose --version
# docker-compose up
# docker-compose up -d
# docker-compose -f my_docker_compose.yml up
# docker-compose -f apache_jdk_docker_compose.yml up
# docker-compose down
# docker-compose restart
# docker-compose ps

# restart: on-failure
# restart: no => default olandır. Yani docker compose otomatik olarak restart yapsın
# restart: unless-stopped => Konteynar durduğunda otomatik olarak yeniden başlasın
# restart: always => Konteynar her zaman otomatik başlasın
# restart: on-failure => konteryanar çökmesi halinde otomatik başlasın

version: '3.8'

services:
  apache_tomcat_web:
    container_name: my_tomcat2
    image: my_tomcat2
    restart: on-failure
    #build: ./deneme/
    build: ./
    ports:
      - "1111:8080"
    volumes:
      - tomcat-logs:/usr/local/tomcat/logs
      - tomcat-webapps:/usr/local/tomcat/webapps

volumes:
  tomcat-logs:
    driver: local
  tomcat-webapps:
    driver: local

# local driver'ı, volume'u host makinenizin dosya sistemi üzerinde depolar. 
# Bu, verilerinizi kalıcı hale getirmenin ve container'lar arasında paylaşmanın en yaygın ve basit yoludur. 
# Docker volume'larını kullanarak, container'lar arasında veri paylaşabilir ve container silindiğinde bile verilerinizi koruyabilirsiniz.

# docker ps
# winpty docker container  exec -it  my_tomcat2 bash
# cd usr/local/tomcat/logs
# cd usr/local/tomcat/webapps
# rm -rf examples
# ls -al

# docker-compose down
# docker volume ls 
# docker volume inspect desktop_tomcat-logs
# docker volume inspect tomcat-webapps

# docker-compose down
# docker volume rm  tomcat-logs


# docker volume ls 
# docker volume inspect tomcat-logs
# docker volume inspect tomcat-webapps

# docker-compose down
# docker volume rm  tomcat-logs

# winpty docker run -it --rm \
# -- name other_apache
# -v desktop_tomcat-logs://usr/local/tomcat/logs  \
# -v desktop_tomcat-webapps://usr/local/tomcat/webapps \
# my_tomcat2 bash

# ls -al 
# cd usr/local/tomcat/logs
# ls -al 
# cd usr/local/tomcat/webapps
# Bu komut şunları yapar:

# docker run: Yeni bir container çalıştırır.
# -it: İnteraktif terminal modunda çalıştırır.
# --rm: Container kapatıldığında otomatik olarak siler.
# -v tomcat-logs:/data: tomcat-logs volume'unu container içindeki /data dizinine bağlar.
# ubuntu: Ubuntu tabanlı bir container çalıştırır.
# bash: Container içinde bash shell çalıştırır.